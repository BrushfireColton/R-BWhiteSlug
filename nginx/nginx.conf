http {
    log_format debug_log ' Request: $request\n Status: $status\n Request_URI: $request_uri\n Method: $request_method\n Host: $host\n Client_IP: $remote_addr\n Proxy_IP(s): $proxy_add_x_forwarded_for\n Proxy_Hostname: $proxy_host\n Real_IP: $http_x_real_ip\n User_Client: $http_user_agent"';
    
    include mime.types;

    upstream auth_service {
        server auth:8000;
    }

    upstream vendor_service {
        server vendor:8001;
    }

    server {
        listen 80;

        access_log /dev/stdout debug_log;
        
        auth_request /auth/middleware;
        auth_request_set $auth_status $upstream_status;        
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass_request_headers on;        

        location /auth/healthz {     
            auth_request off;       
            proxy_pass http://auth_service/api/v1/healthz;
        }

        location /auth/middleware {
            internal;            
            proxy_pass http://auth_service/api/v1/validate;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        location /vendor/all {
            proxy_pass http://vendor_service/api/v1/vendors;
        }
    }
}
events {}